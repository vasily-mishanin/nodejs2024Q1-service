version: '3.8'

services:
  db_postgres:
    container_name: postgres-container
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - '${DB_PORT}:${DB_PORT}'
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

  app:
    container_name: nest-app
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '${APP_HOST_PORT}:${APP_CONTAINER_PORT}'
    environment:
      PORT: ${PORT}
      CRYPT_SALT: ${CRYPT_SALT}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_SECRET_REFRESH_KEY: ${JWT_SECRET_REFRESH_KEY}
      TOKEN_EXPIRE_TIME: ${TOKEN_EXPIRE_TIME}
      TOKEN_REFRESH_EXPIRE_TIME: ${TOKEN_REFRESH_EXPIRE_TIME}
      DB_DOCKER_HOST: ${DB_DOCKER_HOST}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: ${DB_PORT}
      DATABASE_URL: ${DATABASE_URL_DOCKER_COMPOSE}
      APP_CONTAINER_PORT: ${APP_CONTAINER_PORT}
      APP_HOST_PORT: ${APP_HOST_PORT}
      LOG_LEVEL: ${LOG_LEVEL}
      MAX_LOG_FILE_SIZE_BYTES: ${MAX_LOG_FILE_SIZE_BYTES}
    depends_on:
      - db_postgres
    networks:
      - app-network
    volumes:
      - ./src:/app/src

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge
# docker network inspect nodejs2024q1-service_app-network

# docker-compose build --no-cache
# docker-compose up
# docker-compose down
